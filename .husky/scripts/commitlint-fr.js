#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');

// Lire le message de commit
const commitMsgFile = process.argv[2];
const commitMsg = fs.readFileSync(commitMsgFile, 'utf-8').trim();

// R√®gles de validation
const conventionalCommitRegex = /^(feat|fix|docs|style|refactor|perf|test|chore|ci|build|revert)(\([a-z]+\))?:\s.+/;

// Types valides avec descriptions
const types = {
  feat: 'Nouvelle fonctionnalit√©',
  fix: 'Correction de bug',
  docs: 'Documentation',
  style: 'Formatage du code',
  refactor: 'Refactorisation',
  perf: 'Am√©lioration des performances',
  test: 'Ajout de tests',
  chore: 'T√¢ches de maintenance',
  ci: 'Int√©gration continue',
  build: 'Syst√®me de build',
  revert: 'Annulation de commit'
};

// Scopes valides
const validScopes = ['client', 'server', 'shared', 'docs', 'ci', 'deps'];

console.log('\nüîç V√©rification du message de commit...\n');
console.log(`üìù Message: "${commitMsg}"\n`);

// Validation
if (!conventionalCommitRegex.test(commitMsg)) {
  console.log('‚ùå ERREUR: Le message de commit ne respecte pas les conventions!\n');
  
  console.log('üìã Format attendu:');
  console.log('   <type>(<scope>): <description>\n');
  
  console.log('üìå Types valides:');
  Object.entries(types).forEach(([key, desc]) => {
    console.log(`   - ${key.padEnd(10)} : ${desc}`);
  });
  
  console.log('\nüéØ Scopes disponibles:');
  console.log(`   ${validScopes.join(', ')}\n`);
  
  console.log('‚úÖ Exemples valides:');
  console.log('   feat(client): ajouter page de connexion');
  console.log('   fix(server): corriger erreur 404');
  console.log('   docs: mettre √† jour le README\n');
  
  console.log('‚ùå Exemples invalides:');
  console.log('   ajout fichier              (pas de type)');
  console.log('   feat ajouter page          (manque les deux-points)');
  console.log('   FEAT(client): nouvelle     (type en majuscules)\n');
  
  console.log('üìö Documentation: ./COMMIT_CONVENTIONS.md\n');
  
  process.exit(1);
}

// V√©rifier le scope si pr√©sent
const scopeMatch = commitMsg.match(/\(([a-z]+)\)/);
if (scopeMatch) {
  const scope = scopeMatch[1];
  if (!validScopes.includes(scope)) {
    console.log(`‚ö†Ô∏è  ATTENTION: Le scope "${scope}" n'est pas dans la liste recommand√©e.\n`);
    console.log('üéØ Scopes recommand√©s:');
    console.log(`   ${validScopes.join(', ')}\n`);
    console.log('üí° Vous pouvez continuer, mais consid√©rez utiliser un scope standard.\n');
  }
}

console.log('‚úÖ Message de commit valide!\n');
process.exit(0);
